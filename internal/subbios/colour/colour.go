// Package colour defines all the default Nimbus colour settings
package colour

import "image/color"

// CltElement represents an element in the colour lookup table
type CltElement struct {
	FirstPhysicalColour  int
	FlashSpeed           int
	SecondPhysicalColour int
}

var (
	PhysicalColours = []color.RGBA{
		{0x00, 0x00, 0x00, 0xff}, // black
		{0x00, 0x00, 0xaa, 0xff}, // dark blue
		{0xaa, 0x00, 0x00, 0xff}, // dark red
		{0xaa, 0x00, 0xaa, 0xff}, // purple
		{0x00, 0xaa, 0x00, 0xff}, // dark green
		{0x00, 0xaa, 0xaa, 0xff}, // dark cyan
		{0xaa, 0x54, 0x00, 0xff}, // brown
		{0xaa, 0xaa, 0xaa, 0xff}, // light grey
		{0x54, 0x54, 0x54, 0xff}, // dark grey
		{0x54, 0x54, 0xff, 0xff}, // light blue
		{0xff, 0x54, 0x54, 0xff}, // light red
		{0xff, 0x54, 0xff, 0xff}, // light purple
		{0x54, 0xff, 0x54, 0xff}, // light green
		{0x54, 0xff, 0xff, 0xff}, // light cyan
		{0xff, 0xff, 0x54, 0xff}, // yellow
		{0xff, 0xff, 0xff, 0xff}, // white
	}
	DefaultLowResColours = []CltElement{
		{FirstPhysicalColour: 0, FlashSpeed: 0, SecondPhysicalColour: 0},  // 0 black
		{FirstPhysicalColour: 1, FlashSpeed: 0, SecondPhysicalColour: 0},  // 1 dark blue
		{FirstPhysicalColour: 2, FlashSpeed: 0, SecondPhysicalColour: 0},  // 2 dark red
		{FirstPhysicalColour: 3, FlashSpeed: 0, SecondPhysicalColour: 0},  // 3 purple
		{FirstPhysicalColour: 4, FlashSpeed: 0, SecondPhysicalColour: 0},  // 4 dark green
		{FirstPhysicalColour: 5, FlashSpeed: 0, SecondPhysicalColour: 0},  // 5 dark cyan
		{FirstPhysicalColour: 6, FlashSpeed: 0, SecondPhysicalColour: 0},  // 6 brown
		{FirstPhysicalColour: 7, FlashSpeed: 0, SecondPhysicalColour: 0},  // 7 light grey
		{FirstPhysicalColour: 8, FlashSpeed: 0, SecondPhysicalColour: 0},  // 8 dark grey
		{FirstPhysicalColour: 9, FlashSpeed: 0, SecondPhysicalColour: 0},  // 9 light blue
		{FirstPhysicalColour: 10, FlashSpeed: 0, SecondPhysicalColour: 0}, // 10 light red
		{FirstPhysicalColour: 11, FlashSpeed: 0, SecondPhysicalColour: 0}, // 11 light purple
		{FirstPhysicalColour: 12, FlashSpeed: 0, SecondPhysicalColour: 0}, // 12 light green
		{FirstPhysicalColour: 13, FlashSpeed: 0, SecondPhysicalColour: 0}, // 13 light cyan
		{FirstPhysicalColour: 14, FlashSpeed: 0, SecondPhysicalColour: 0}, // 14 yellow
		{FirstPhysicalColour: 15, FlashSpeed: 0, SecondPhysicalColour: 0}, // 15 white
	}
	DefaultHighResColours = []CltElement{
		{FirstPhysicalColour: 0, FlashSpeed: 0, SecondPhysicalColour: 0},  // black
		{FirstPhysicalColour: 4, FlashSpeed: 0, SecondPhysicalColour: 0},  // dark green
		{FirstPhysicalColour: 10, FlashSpeed: 0, SecondPhysicalColour: 0}, // light red
		{FirstPhysicalColour: 15, FlashSpeed: 0, SecondPhysicalColour: 0}, // white
	}
	LineStyles = [][]int{
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // Style 0 is solid
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // Style 1 is solid
		{1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}, // Style 2 is dashed
		{1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}, // Style 3 is dotted
		{1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0}, // Style 4 is dash-dotted
		{1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0}, // Style 5 is irregular dashed...check on emulator
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // Style 6 is user-defined
	}
	DefaultLowResDithers = [][4][4]int{
		{
			{0, 1, 0, 1},
			{1, 0, 1, 0},
			{0, 1, 0, 1},
			{1, 0, 1, 0},
		},
		{
			{0, 2, 0, 2},
			{2, 0, 2, 0},
			{0, 2, 0, 2},
			{2, 0, 2, 0},
		},
		{
			{0, 3, 0, 3},
			{3, 0, 3, 0},
			{0, 3, 0, 3},
			{3, 0, 3, 0},
		},
		{
			{1, 2, 1, 2},
			{2, 1, 2, 1},
			{1, 2, 1, 2},
			{2, 1, 2, 1},
		},
		{
			{1, 3, 1, 3},
			{3, 1, 3, 1},
			{1, 3, 1, 3},
			{3, 1, 3, 1},
		},
		{
			{2, 3, 2, 3},
			{3, 2, 3, 2},
			{2, 3, 2, 3},
			{3, 2, 3, 2},
		},
		{
			{15, 0, 15, 0},
			{0, 15, 0, 15},
			{15, 0, 15, 0},
			{0, 15, 0, 15},
		},
		{
			{15, 1, 15, 1},
			{1, 15, 1, 15},
			{15, 1, 15, 1},
			{1, 15, 1, 15},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
	}
	DefaultHighResDithers = [][4][4]int{
		{
			{0, 1, 0, 1},
			{1, 0, 1, 0},
			{0, 1, 0, 1},
			{1, 0, 1, 0},
		},
		{
			{0, 2, 0, 2},
			{2, 0, 2, 0},
			{0, 2, 0, 2},
			{2, 0, 2, 0},
		},
		{
			{1, 2, 1, 2},
			{2, 1, 2, 1},
			{1, 2, 1, 2},
			{2, 1, 2, 1},
		},
		{
			{3, 0, 3, 0},
			{0, 3, 0, 3},
			{3, 0, 3, 0},
			{0, 3, 0, 3},
		},
		{
			{3, 2, 3, 2},
			{2, 3, 2, 3},
			{3, 2, 3, 2},
			{2, 3, 2, 3},
		},
		{
			{3, 1, 3, 1},
			{1, 3, 1, 3},
			{3, 1, 3, 1},
			{1, 3, 1, 3},
		},
		{
			{3, 1, 3, 2},
			{1, 3, 2, 3},
			{2, 3, 1, 3},
			{3, 2, 3, 1},
		},
		{
			{1, 3, 1, 2},
			{3, 1, 2, 1},
			{2, 1, 3, 1},
			{1, 2, 1, 3},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
			{0, 0, 0, 0},
		},
	}
	DefaultHatchings = [][16][16]int{
		{
			//  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
			{1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1}, // 1
			{1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1}, // 2
			{1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1}, // 3
			{1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1}, // 4
			{1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}, // 5
			{0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0}, // 6
			{0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0}, // 7
			{0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}, // 8
			{0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0}, // 9
			{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0}, // 10
			{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1}, // 11
			{1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 12
			{1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1}, // 13
			{1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1}, // 14
			{1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1}, // 15
			{1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1}, // 16
		},
		{
			//  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 1
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 2
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 3
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 4
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 5
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 6
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 7
			{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // 8
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 9
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 10
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 11
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 12
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 13
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 14
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 15
			{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 16
		},
		{
			//  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
			{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, // 1
			{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, // 2
			{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, // 3
			{0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, // 4
			{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, // 5
			{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, // 6
			{0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0}, // 7
			{0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0}, // 8
			{0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0}, // 9
			{0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0}, // 10
			{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, // 11
			{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, // 12
			{0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, // 13
			{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, // 14
			{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, // 15
			{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, // 16
		},
		{
			//  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 1
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 2
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 3
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 4
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 5
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 6
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 7
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 8
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 9
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 10
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 11
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 12
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 13
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 14
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 15
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 16
		},
		{
			{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // 1
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 2
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 3
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 4
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 5
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 6
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 7
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 8
			{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // 9
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 10
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 11
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 12
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 13
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 14
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 15
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 16
		},
		{
			//  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
			{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // 1
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 2
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 3
			{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 4
			{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // 5
			{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, // 6
			{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, // 7
			{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, // 8
			{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // 9
			{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1}, // 10
			{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1}, // 11
			{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1}, // 12
			{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // 13
			{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, // 14
			{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, // 15
			{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, // 16
		},
	}
	DefaultPolymarkers = [][][2]int{
		{
			// 0 - .
			[2]int{0, 0},       // move to
			[2]int{0, 0},       // draw to
			[2]int{-128, -128}, // end
		},
		{
			// 1 - +
			[2]int{0, -3},      // move to
			[2]int{0, 3},       // draw to
			[2]int{-128, 0},    // pen-up
			[2]int{-3, 0},      // move to
			[2]int{3, 0},       // draw to
			[2]int{-128, -128}, // end
		},
		{
			// 2 - *
			// Draw +
			[2]int{0, -3},   // move to
			[2]int{0, 3},    // draw to
			[2]int{-128, 0}, // pen-up
			[2]int{-3, 0},   // move to
			[2]int{3, 0},    // draw to
			[2]int{-128, 0}, // pen-up
			// Draw X
			[2]int{-3, -3},     // move to
			[2]int{3, 3},       // draw to
			[2]int{-128, 0},    // pen-up
			[2]int{3, -3},      // move to
			[2]int{-3, 3},      // draw to
			[2]int{-128, -128}, // end
		},
		{
			// 3 - O
			[2]int{-3, -1},     // move to
			[2]int{-3, 1},      // draw to
			[2]int{-1, 3},      // draw to
			[2]int{1, 3},       // draw to
			[2]int{3, 1},       // draw to
			[2]int{3, -1},      // draw to
			[2]int{1, -3},      // draw to
			[2]int{-1, -3},     // draw to
			[2]int{-3, -1},     // draw to
			[2]int{-128, -128}, // end
		},
		{
			// 4 - X
			[2]int{-3, -3},     // move to
			[2]int{3, 3},       // draw to
			[2]int{-128, 0},    // pen-up
			[2]int{3, -3},      // move to
			[2]int{-3, 3},      // draw to
			[2]int{-128, -128}, // end
		},
	}
)
